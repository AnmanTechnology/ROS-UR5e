<?xml version="1.0"?>
<launch>
    <arg name="robot_ip_ur5eA" value="192.168.1.31"/>
    <arg name="kinematics_ur5eA" value="$(find ros_ur5e)/config/ur5eA.yaml"/>

    <arg name="robot_ip_ur5eB" value="192.168.1.32"/>
    <arg name="kinematics_ur5eB" value="$(find ros_ur5e)/config/ur5eB.yaml"/>



    <node pkg="tf" type="static_transform_publisher" name="fixed_world_urB" args="0.0 0.0 0.0 0.0 0.0 0.0 world urB/world 20" />
    <node pkg="tf" type="static_transform_publisher" name="fixed_world_urA" args="0.0 0.0 0.0 0.0 0.0 0.0 world urA/world 20" />

    <group ns="urA">
        <param name="robot_description" command="xacro '$(find ros_ur5e)/urdf/ur5e_robot.urdf.xacro' kinematics_config:=$(arg kinematics_ur5eA) fixed_xyz:='0.0 0.23 1.45' fixed_rpy:='-0.78549 3.14159 0'" />

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="tf_prefix" value="urA"/>
        </node>

        <rosparam file="$(find ur_robot_driver)/config/ur5e_controllers.yaml" command="load"/>
        <node name="ur_hardware_interface" pkg="ur_robot_driver" type="ur_robot_driver_node" output="screen" required="true">
            <param name="robot_ip" type="str" value="$(arg robot_ip_ur5eA)"/>
            <rosparam command="load" file="$(arg kinematics_ur5eA)" />
            <param name="reverse_port" value="50007"/>
            <param name="script_sender_port" value="50008"/>

            <param name="script_file" value="$(find ur_robot_driver)/resources/ros_control.urscript"/>
            <param name="output_recipe_file" value="$(find ur_robot_driver)/resources/rtde_output_recipe.txt"/>
            <param name="input_recipe_file" value="$(find ur_robot_driver)/resources/rtde_input_recipe.txt"/>
            <param name="headless_mode" value="false"/>
            <param name="tf_prefix" value="urA/"/>
            <param name="tool_voltage" value="0"/>
            <param name="tool_parity" value="0"/>
            <param name="tool_baud_rate" value="115200"/>
            <param name="tool_stop_bits" value="1"/>
            <param name="tool_rx_idle_chars" value="1.5"/>
            <param name="tool_tx_idle_chars" value="3.5"/>
        </node>

        <!-- <node if="$(arg use_tool_communication)" name="ur_tool_communication_bridge" pkg="ur_robot_driver" type="tool_communication" respawn="false" output="screen">
            <param name="robot_ip" value="$(arg robot_ip)"/>
            <param name="reverse_port" type="int" value="50001"/>
            <param name="script_sender_port" type="int" value="50002"/>
            <param name="device_name" value="/tmp/ttyUR"/>
            <param name="tcp_port" value="54321"/>
        </node> -->

        <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller scaled_pos_traj_controller speed_scaling_state_controller force_torque_sensor_controller"/>
        <node name="ros_control_stopped_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="--stopped pos_traj_controller joint_group_vel_controller"/>
        <node name="controller_stopper" pkg="controller_stopper" type="node" respawn="false" output="screen">
            <remap from="robot_running" to="ur_hardware_interface/robot_program_running"/>
            <rosparam param="consistent_controllers">
                - "joint_state_controller"
                - "speed_scaling_state_controller"
                - "force_torque_sensor_controller"
                - "robot_status_controller"
            </rosparam>
        </node>

        <node ns="ur_hardware_interface" name="ur_robot_state_helper" pkg="ur_robot_driver" type="robot_state_helper" respawn="false" output="screen"/>

        <include file="$(find ros_ur5e)/launch/move_group_urA.launch"/>
    </group>

    <group ns="urB">
        <param name="robot_description" command="xacro '$(find ros_ur5e)/urdf/ur5e_robot.urdf.xacro' kinematics_config:=$(arg kinematics_ur5eB) fixed_xyz:='0.0 -0.23 1.45' fixed_rpy:='2.3561925 0.0 0'" />

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="tf_prefix" value="urB"/>
        </node>

        <rosparam file="$(find ur_robot_driver)/config/ur5e_controllers.yaml" command="load"/>
        <node name="ur_hardware_interface" pkg="ur_robot_driver" type="ur_robot_driver_node" output="screen" required="true">
            <param name="robot_ip" type="str" value="$(arg robot_ip_ur5eB)"/>
            <rosparam command="load" file="$(arg kinematics_ur5eB)" />
            <param name="script_file" value="$(find ur_robot_driver)/resources/ros_control.urscript"/>
            <param name="output_recipe_file" value="$(find ur_robot_driver)/resources/rtde_output_recipe.txt"/>
            <param name="input_recipe_file" value="$(find ur_robot_driver)/resources/rtde_input_recipe.txt"/>
            <param name="headless_mode" value="false"/>
            <param name="tf_prefix" value="urB/"/>
            <param name="tool_voltage" value="0"/>
            <param name="tool_parity" value="0"/>
            <param name="tool_baud_rate" value="115200"/>
            <param name="tool_stop_bits" value="1"/>
            <param name="tool_rx_idle_chars" value="1.5"/>
            <param name="tool_tx_idle_chars" value="3.5"/>
        </node>

        <!-- <node if="$(arg use_tool_communication)" name="ur_tool_communication_bridge" pkg="ur_robot_driver" type="tool_communication" respawn="false" output="screen">
            <param name="robot_ip" value="$(arg robot_ip)"/>
            <param name="reverse_port" type="int" value="50001"/>
            <param name="script_sender_port" type="int" value="50002"/>
            <param name="device_name" value="/tmp/ttyUR"/>
            <param name="tcp_port" value="54321"/>
        </node> -->

        <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller scaled_pos_traj_controller speed_scaling_state_controller force_torque_sensor_controller"/>
        <node name="ros_control_stopped_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="--stopped pos_traj_controller joint_group_vel_controller"/>
        <node name="controller_stopper" pkg="controller_stopper" type="node" respawn="false" output="screen">
            <remap from="robot_running" to="ur_hardware_interface/robot_program_running"/>
            <rosparam param="consistent_controllers">
                - "joint_state_controller"
                - "speed_scaling_state_controller"
                - "force_torque_sensor_controller"
                - "robot_status_controller"
            </rosparam>
        </node>

        <node ns="ur_hardware_interface" name="ur_robot_state_helper" pkg="ur_robot_driver" type="robot_state_helper" respawn="false" output="screen"/>

        <include file="$(find ros_ur5e)/launch/move_group_urB.launch"/>
    </group>
</launch>
